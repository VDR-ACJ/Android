function encrypt($plaintext, $password) {
    $method = "AES-256-CBC";
    $key = hash('sha256', $password, true);
    $iv = openssl_random_pseudo_bytes(16);

    $ciphertext = openssl_encrypt($plaintext, $method, $key, OPENSSL_RAW_DATA, $iv);
    $hash = hash_hmac('sha256', $ciphertext . $iv, $key, true);

    return $iv . $hash . $ciphertext;
}

function decrypt($ivHashCiphertext, $password) {
    $method = "AES-256-CBC";
    $iv = substr($ivHashCiphertext, 0, 16);
    $hash = substr($ivHashCiphertext, 16, 32);
    $ciphertext = substr($ivHashCiphertext, 48);
    $key = hash('sha256', $password, true);

    if (!hash_equals(hash_hmac('sha256', $ciphertext . $iv, $key, true), $hash)) return null;

    return openssl_decrypt($ciphertext, $method,$key, OPENSSL_RAW_DATA, $iv);
}


$encrypted = encrypt('Plaintext string.', 'password'); // this yields a binary string
echo base64_encode($encrypted).'</br></br>';
echo decrypt($encrypted, 'password');


//////////////////////////////////////////////////
$ciphertext64 = "Y9los2R9oQEV2tQWXV15iQ==";
$key64 = "qdIhTif7UUTf1aoQeNMjl8mHs2w5jsqypOj68xc8hYc=";

$iv64="nhccIDmmbXEVHUBUcGW8qA==";

//$key = base64_decode($key64, true);
//$iv = base64_decode($iv64, true);
$testeencrypta = openssl_encrypt('PTBR', 'AES-256-CBC', base64_decode($key64), OPENSSL_RAW_DATA, base64_decode($iv64));
$decryptedteste = openssl_decrypt($testeencrypta, 'AES-256-CBC', base64_decode($key64), OPENSSL_RAW_DATA, base64_decode($iv64));
echo '</br></br>decripta teste'.$decryptedteste;

$decrypted = openssl_decrypt(base64_decode($ciphertext64), 'AES-256-CBC', base64_decode($key64), OPENSSL_RAW_DATA, base64_decode($iv64));
echo '</br></br></br>teste:'.$decrypted; 
 
 
 ////============android==================////
 byte[] chaveteste=null;
        try {
            String secret = "abc";
            String message = "teste";

            Mac sha256_HMAC = Mac.getInstance("HmacSHA256");
            SecretKeySpec secret_key = new SecretKeySpec(secret.getBytes(), "HmacSHA256");
            chaveteste=secret_key.getEncoded();
            sha256_HMAC.init(secret_key);

           // String hash = Base64.encodeBase64String(sha256_HMAC.doFinal(message.getBytes()));
            String hash = Base64.encodeToString(sha256_HMAC.doFinal(message.getBytes()),Base64.DEFAULT);
            Toast.makeText(this, "hash "+hash, Toast.LENGTH_LONG).show();

            byte [] decode = Base64.decode("UgZFlLN5pkvQG0hucSYXgzqHvghlLpdMZ5QAbMrN6fs=",Base64.DEFAULT);
            //chaveteste=hash.getBytes();
            //System.out.println(hash);
        }
        catch (Exception e){
            System.out.println("Error");
        }
        //teste
        String texto = "123";
        String chave = "abcdefghi";
        try {

            // inicio base
            String textonovo="braziliam";
            String Div64="xIJ1IuNd0lCQq262n7oduA==";
            String Dkey64 = "qdIhTif7UUTf1aoQeNMjl8mHs2w5jsqypOj68xc8hYc=";
            SecretKeySpec DnewKey = new SecretKeySpec(Base64.decode(Dkey64,Base64.DEFAULT), "AES");
            Cipher cipherd = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipherd.init(Cipher.ENCRYPT_MODE, DnewKey);
            byte[] ciphertextD = cipherd.doFinal(textonovo.getBytes());
            String novotextobase64 = Base64.encodeToString(ciphertextD,0);
            byte[] ivD = cipherd.getIV();
            String base64iv2=Base64.encodeToString(ivD,0);
            //fim base



            byte[] plaintext = texto.getBytes();
            KeyGenerator keygen = KeyGenerator.getInstance("AES");
            keygen.init(256);
            SecretKey key = keygen.generateKey();
            //SecretKey key = newKey;
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipher.init(Cipher.ENCRYPT_MODE, key);
            String chave64 = Base64.encodeToString(key.getEncoded(),Base64.DEFAULT);
            chave64= chave64.replaceAll("\\r\\n|\\n", "");
            byte[] ciphertext = cipher.doFinal(plaintext);
            byte[] iv = cipher.getIV();
            String iv64=Base64.encodeToString(iv,Base64.DEFAULT);
            iv64= iv64.replaceAll("\\r\\n|\\n", "");
            String textcipher64 = Base64.encodeToString(ciphertext,Base64.DEFAULT);
            textcipher64= textcipher64.replaceAll("\\r\\n|\\n", "");
            decrypt(ciphertext,key,iv);
        }catch (Exception e){
            Toast.makeText(this, "erro aes "+e, Toast.LENGTH_LONG).show();
        }


    }
    public void decrypt(byte[] cipherText, SecretKey key, byte[] IV)
    {
        try {
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            SecretKeySpec keySpec = new SecretKeySpec(key.getEncoded(), "AES");
            IvParameterSpec ivSpec = new IvParameterSpec(IV);
            cipher.init(Cipher.DECRYPT_MODE, keySpec, ivSpec);
            byte[] decryptedText = cipher.doFinal(cipherText);
            String ads=new String(decryptedText);
            Toast.makeText(MainActivity.this, "decrypt aes "+ads, Toast.LENGTH_LONG).show();
            //return new String(decryptedText);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
